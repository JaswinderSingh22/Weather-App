{"ast":null,"code":"import _asyncToGenerator from\"/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/node_modules/@babel/runtime/regenerator/index.js\";import React,{Component}from'react';import'./App.css';import{Weather}from'./Weather.js';import{Form}from'./Form';import\"bootstrap/dist/css/bootstrap.min.css\";import\"weather-icons/css/weather-icons.css\";// api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API_Key=\"e4ae41adf2c5e12fd01e7d271fbf4d54\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.Getweather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var city,country,api_call,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();city=e.target.elements.city.value;country=e.target.elements.country.value;if(!(country&&city)){_context.next=15;break;}_context.next=6;return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\",\").concat(country,\"&appid=\").concat(API_Key));case 6:api_call=_context.sent;_context.next=9;return api_call.json();case 9:response=_context.sent;console.log(response);_this.setState({city:\"\".concat(response.name,\",\").concat(response.sys.country),celsius:_this.calcCelsius(response.main.temp),Temp_min:_this.calcCelsius(response.main.temp_min),Temp_max:_this.calcCelsius(response.main.temp_max),Description:response.weather[0].description,error:false});_this.get_Weathericon(_this.weatherIcon,response.weather[0].id);_context.next=16;break;case 15:_this.setState({error:true});case 16:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={city:undefined,country:undefined,icon:undefined,main:undefined,celsius:undefined,Temp_max:undefined,Temp_min:undefined,Description:\"\",error:false};// this.Getweather();\n_this.weatherIcon={Thunderstorm:\"wi-thunderstorm\",Drizzle:\"wi-sleet\",Rain:\"wi-strom-showers\",Snow:\"wi-snow\",Atmosphere:\"wi-fog\",Clear:\"wi-day-sunny\",Clouds:\"wi-day-fog\"};return _this;}_createClass(App,[{key:\"calcCelsius\",value:function calcCelsius(temp){var cel=Math.floor(temp-273.5);return cel;}},{key:\"get_Weathericon\",value:function get_Weathericon(icons,rangeId){switch(true){case rangeId>=200&&rangeId<=232:this.setState({icon:this.weatherIcon.Thunderstorm});break;case rangeId>=300&&rangeId<=321:this.setState({icon:this.weatherIcon.Drizzle});break;case rangeId>=500&&rangeId<=531:this.setState({icon:this.weatherIcon.Rain});break;case rangeId>=600&&rangeId<=622:this.setState({icon:this.weatherIcon.Snow});break;case rangeId>=701&&rangeId<=781:this.setState({icon:this.weatherIcon.Atmosphere});break;case rangeId==800:this.setState({icon:this.weatherIcon.Clear});break;case rangeId>=801&&rangeId<=804:this.setState({icon:this.weatherIcon.Clouds});break;default:this.setState({icon:this.weatherIcon.Clouds});}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Form,{loadweather:this.Getweather,error:this.state.error}),/*#__PURE__*/_jsx(Weather,{city:this.state.city,country:this.state.country,celsius:this.state.celsius,Temp_min:this.state.Temp_min,Temp_max:this.state.Temp_max,Description:this.state.Description,weatherIcon:this.state.icon})]});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/src/App.js"],"names":["React","Component","Weather","Form","API_Key","App","Getweather","e","preventDefault","city","target","elements","value","country","fetch","api_call","json","response","console","log","setState","name","sys","celsius","calcCelsius","main","temp","Temp_min","temp_min","Temp_max","temp_max","Description","weather","description","error","get_Weathericon","weatherIcon","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cel","Math","floor","icons","rangeId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport { Weather } from './Weather.js';\nimport { Form } from './Form';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\"\n\n// api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_Key = \"e4ae41adf2c5e12fd01e7d271fbf4d54\";\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      Temp_max: undefined,\n      Temp_min: undefined,\n      Description: \"\",\n      error: false\n    }\n    // this.Getweather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-strom-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calcCelsius(temp) {\n    let cel = Math.floor(temp - 273.5);\n    return cel;\n  }\n\n  get_Weathericon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere });\n        break;\n      case rangeId == 800:\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds });\n    }\n  }\n\n  Getweather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (country && city) {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_Key}`)\n      const response = await api_call.json();\n      console.log(response);\n\n      this.setState({\n        \n        city: `${response.name},${response.sys.country}`,\n        celsius: this.calcCelsius(response.main.temp),\n        Temp_min: this.calcCelsius(response.main.temp_min),\n        Temp_max: this.calcCelsius(response.main.temp_max),\n        Description: response.weather[0].description,\n        error:false\n\n\n      });\n      this.get_Weathericon(this.weatherIcon, response.weather[0].id);\n    }else{\n      this.setState({error:true});\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.Getweather} error={this.state.error} />\n        <Weather  city={this.state.city}\n          country={this.state.country}\n          celsius={this.state.celsius}\n          Temp_min={this.state.Temp_min}\n          Temp_max={this.state.Temp_max}\n          Description={this.state.Description}\n          weatherIcon={this.state.icon}\n        />\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}