{"ast":null,"code":"var _jsxFileName = \"/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Weather } from './Weather.js';\nimport { Form } from './Form';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\"; // api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_Key = \"e4ae41adf2c5e12fd01e7d271fbf4d54\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.Getweather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      if (country && city) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${country},${city}&appid=${API_Key}`);\n        const response = await api_call.json();\n        console.log(response);\n        this.setState({\n          country: response.sys.country,\n          city: `{response.name}`,\n          celsius: this.calcCelsius(response.main.temp),\n          Temp_min: this.calcCelsius(response.main.temp_min),\n          Temp_max: this.calcCelsius(response.main.temp_max),\n          Description: response.weather[0].description\n        });\n        this.get_Weathericon(this.weatherIcon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      Temp_max: undefined,\n      Temp_min: undefined,\n      Description: \"\",\n      error: false\n    }; // this.Getweather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-strom-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calcCelsius(temp) {\n    let cel = Math.floor(temp - 273.5);\n    return cel;\n  }\n\n  get_Weathericon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId == 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        loadweather: this.Getweather,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        country: this.state.country,\n        city: this.state.city,\n        celsius: this.state.celsius,\n        Temp_min: this.state.Temp_min,\n        Temp_max: this.state.Temp_max,\n        Description: this.state.Description,\n        weatherIcon: this.state.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/src/App.js"],"names":["React","Component","Weather","Form","API_Key","App","constructor","Getweather","e","preventDefault","city","target","elements","value","country","api_call","fetch","response","json","console","log","setState","sys","celsius","calcCelsius","main","temp","Temp_min","temp_min","Temp_max","temp_max","Description","weather","description","get_Weathericon","weatherIcon","id","error","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cel","Math","floor","icons","rangeId","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport { Weather } from './Weather.js';\nimport { Form } from './Form';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\"\n\n// api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_Key = \"e4ae41adf2c5e12fd01e7d271fbf4d54\";\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      Temp_max: undefined,\n      Temp_min: undefined,\n      Description: \"\",\n      error: false\n    }\n    // this.Getweather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-strom-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calcCelsius(temp) {\n    let cel = Math.floor(temp - 273.5);\n    return cel;\n  }\n\n  get_Weathericon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere });\n        break;\n      case rangeId == 800:\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds });\n    }\n  }\n\n  Getweather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (country && city) {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${country},${city}&appid=${API_Key}`)\n      const response = await api_call.json();\n      console.log(response);\n\n      this.setState({\n        country: response.sys.country,\n        city: `{response.name}`,\n        celsius: this.calcCelsius(response.main.temp),\n        Temp_min: this.calcCelsius(response.main.temp_min),\n        Temp_max: this.calcCelsius(response.main.temp_max),\n        Description: response.weather[0].description,\n\n\n      });\n      this.get_Weathericon(this.weatherIcon, response.weather[0].id);\n    }else{\n      this.setState({error:true});\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.Getweather} error={this.state.error} />\n        <Weather country={this.state.country} city={this.state.city}\n          celsius={this.state.celsius}\n          Temp_min={this.state.Temp_min}\n          Temp_max={this.state.Temp_max}\n          Description={this.state.Description}\n          weatherIcon={this.state.icon}\n        />\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}