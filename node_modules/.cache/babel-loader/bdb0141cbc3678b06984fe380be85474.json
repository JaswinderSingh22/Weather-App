{"ast":null,"code":"var _jsxFileName = \"/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Weather } from './Weather.js';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\"; // api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_Key = \"e4ae41adf2c5e12fd01e7d271fbf4d54\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.Getweather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_Key}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        country: response.sys.country,\n        city: response.name,\n        celsius: this.calcCelsius(response.main.temp),\n        Temp_min: this.calcCelsius(response.main.temp_min),\n        Temp_max: this.calcCelsius(response.main.temp_max),\n        Description: response.weather[0].description,\n        icon: this.weatherIcon.Thunderstorm\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      Temp_max: undefined,\n      Temp_min: undefined,\n      Description: \"\",\n      error: false\n    };\n    this.Getweather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\"\n    };\n  }\n\n  calcCelsius(temp) {\n    let cel = Math.floor(temp - 273.5);\n    return cel;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Weather, {\n        country: this.state.country,\n        city: this.state.city,\n        celsius: this.state.celsius,\n        Temp_min: this.state.Temp_min,\n        Temp_max: this.state.Temp_max,\n        Description: this.state.Description,\n        weatherIcon: this.state.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/turbanator/Desktop/FRONTEND/ReactJS/weather-app/src/App.js"],"names":["React","Component","Weather","API_Key","App","constructor","Getweather","api_call","fetch","response","json","console","log","setState","country","sys","city","name","celsius","calcCelsius","main","temp","Temp_min","temp_min","Temp_max","temp_max","Description","weather","description","icon","weatherIcon","Thunderstorm","state","undefined","error","cel","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP,C,CAEA;;;AACA,MAAMC,OAAO,GAAC,kCAAd;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ;;AADY,SA0BdC,UA1Bc,GA0BF,YAAU;AACpB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oEAAmEL,OAAQ,EAA7E,CAA5B;AACA,YAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,OAAO,EAACL,QAAQ,CAACM,GAAT,CAAaD,OADT;AAEZE,QAAAA,IAAI,EAACP,QAAQ,CAACQ,IAFF;AAGZC,QAAAA,OAAO,EAAC,KAAKC,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcC,IAA/B,CAHI;AAIZC,QAAAA,QAAQ,EAAE,KAAKH,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcG,QAA/B,CAJE;AAKZC,QAAAA,QAAQ,EAAE,KAAKL,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcK,QAA/B,CALE;AAMZC,QAAAA,WAAW,EAAEjB,QAAQ,CAACkB,OAAT,CAAiB,CAAjB,EAAoBC,WANrB;AAOZC,QAAAA,IAAI,EAAC,KAAKC,WAAL,CAAiBC;AAPV,OAAd;AAUD,KAzCa;;AAGZ,SAAKC,KAAL,GAAa;AACXhB,MAAAA,IAAI,EAACiB,SADM;AAEXnB,MAAAA,OAAO,EAAEmB,SAFE;AAGXJ,MAAAA,IAAI,EAAEI,SAHK;AAIXb,MAAAA,IAAI,EAAEa,SAJK;AAKXf,MAAAA,OAAO,EAAEe,SALE;AAMXT,MAAAA,QAAQ,EAAES,SANC;AAOXX,MAAAA,QAAQ,EAAEW,SAPC;AAQXP,MAAAA,WAAW,EAAE,EARF;AASXQ,MAAAA,KAAK,EAAC;AATK,KAAb;AAWA,SAAK5B,UAAL;AACA,SAAKwB,WAAL,GAAiB;AACfC,MAAAA,YAAY,EAAC;AADE,KAAjB;AAGD;;AAEDZ,EAAAA,WAAW,CAACE,IAAD,EACX;AACE,QAAIc,GAAG,GAACC,IAAI,CAACC,KAAL,CAAWhB,IAAI,GAAC,KAAhB,CAAR;AACA,WAAOc,GAAP;AACD;;AAkBDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWlB,OAA7B;AAAsC,QAAA,IAAI,EAAE,KAAKkB,KAAL,CAAWhB,IAAvD;AACA,QAAA,OAAO,EAAE,KAAKgB,KAAL,CAAWd,OADpB;AAEA,QAAA,QAAQ,EAAE,KAAKc,KAAL,CAAWV,QAFrB;AAGA,QAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWR,QAHrB;AAIA,QAAA,WAAW,EAAE,KAAKQ,KAAL,CAAWN,WAJxB;AAKA,QAAA,WAAW,EAAE,KAAKM,KAAL,CAAWH;AALxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAvDyB;;AA4D5B,eAAezB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport { Weather } from './Weather.js';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\"\n\n// api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_Key=\"e4ae41adf2c5e12fd01e7d271fbf4d54\";\n\n\nclass App extends Component {\n  constructor() {\n    super()\n  \n    this.state = {\n      city:undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      Temp_max: undefined,\n      Temp_min: undefined,\n      Description: \"\",\n      error:false \n    }\n    this.Getweather();\n    this.weatherIcon={\n      Thunderstorm:\"wi-thunderstorm\"\n    }\n  }\n  \n  calcCelsius(temp)\n  {\n    let cel=Math.floor(temp-273.5);\n    return cel;\n  }\n\n  Getweather= async() =>{\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_Key}`)\n    const response = await api_call.json();\n    console.log(response);\n    \n    this.setState({\n      country:response.sys.country,\n      city:response.name,\n      celsius:this.calcCelsius(response.main.temp),\n      Temp_min: this.calcCelsius(response.main.temp_min),\n      Temp_max: this.calcCelsius(response.main.temp_max),\n      Description: response.weather[0].description,\n      icon:this.weatherIcon.Thunderstorm\n\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n          <Weather country={this.state.country} city={this.state.city}\n          celsius={this.state.celsius}\n          Temp_min={this.state.Temp_min}\n          Temp_max={this.state.Temp_max}\n          Description={this.state.Description}\n          weatherIcon={this.state.icon}\n          />\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}